---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: k8s-task-runner-role
rules:
- apiGroups: [""]
  resources:
  - pods
  - pods/log
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  name: k8s-task-runner-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  name: k8s-task-runner_pod-list
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: k8s-task-runner-role
subjects:
- kind: ServiceAccount
  name: k8s-task-runner-sa
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: k8s-task-runner
  name: k8s-task-runner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-task-runner
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: k8s-task-runner
    spec:
      serviceAccountName: k8s-task-runner-sa
      containers:
      - image: k3d-k8s-task-runner.registry.localhost:5000/k8s_task_runner:0.5
        name: k8s-task-runner
        args: ["-inCluster"]
        resources: {}
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /status
            port: 80
          failureThreshold: 6
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /status
            port: 80
          failureThreshold: 3
          periodSeconds: 3
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: k8s-task-runner
  name: k8s-task-runner-svc
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: k8s-task-runner
status:
  loadBalancer: {}
